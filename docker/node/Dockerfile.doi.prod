# =============================================================================
# DOI (Docker Official Image) - Production
# =============================================================================
# Multi-stage build for optimized production image
# Stage 1: Build the application
# Stage 2: Create minimal runtime image

# --- Build Stage ---
FROM node:20-bookworm AS builder

WORKDIR /usr/src/app

# Copy package files
COPY app/package*.json ./

# Install ALL dependencies (including devDependencies for build)
RUN npm ci

# Copy source files
COPY app/ .

# Build TypeScript to JavaScript
RUN npm run build

# --- Runtime Stage ---
FROM node:20-bookworm-slim

# Create non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

WORKDIR /usr/src/app

# Copy package files
COPY app/package*.json ./

# Install ONLY production dependencies
RUN npm ci --omit=dev && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /usr/src/app/dist ./dist

# Copy public assets
COPY app/public ./public

# Change ownership to non-root user
RUN chown -R nodejs:nodejs /usr/src/app

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"

# Start the application
CMD ["npm", "start"]
